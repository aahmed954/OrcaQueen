# AI-SWARM-MIAMI-2025 Security Configuration
# Addresses critical security issues identified in validation

# === AUTHENTICATION ===
authentication:
  open_webui:
    enabled: true
    method: jwt
    session_timeout: 3600
    require_2fa: false  # Enable for production

  litellm:
    enabled: true
    api_key_required: true
    rate_limiting:
      enabled: true
      requests_per_minute: 100
      tokens_per_hour: 1000000

  sillytavern:
    enabled: true
    whitelist_mode: true
    allowed_ips:
      - "100.96.197.84"  # Oracle
      - "100.72.73.3"    # Starlord
      - "100.122.12.54"  # Thanos
      - "127.0.0.1"      # Local

# === ENCRYPTION ===
encryption:
  database:
    postgresql:
      ssl_mode: require
      ssl_cert: /certs/postgres.crt
      ssl_key: /certs/postgres.key

  redis:
    tls_enabled: true
    tls_cert: /certs/redis.crt
    tls_key: /certs/redis.key

  api_communications:
    enforce_https: false  # True for production
    tls_version: "1.3"

  storage:
    encrypt_at_rest: true
    encryption_algorithm: AES-256-GCM

# === CONTAINER SECURITY ===
container_security:
  run_as_non_root: true
  read_only_root_fs: false  # Some services need write access
  drop_capabilities:
    - ALL
  add_capabilities:
    - NET_BIND_SERVICE
  security_opt:
    - no-new-privileges:true

# === NETWORK SECURITY ===
network_security:
  firewall_rules:
    default_policy: deny
    allowed_connections:
      - from: "100.96.197.84"
        to: "100.72.73.3"
        ports: [8000, 6333]
      - from: "100.96.197.84"
        to: "100.122.12.54"
        ports: [8080, 8001]
      - from: "100.122.12.54"
        to: "100.96.197.84"
        ports: [4000]

  tailscale_acls:
    enabled: true
    policy_file: /config/tailscale-acl.json

# === SECRETS MANAGEMENT ===
secrets_management:
  backend: docker_secrets  # or vault for production
  rotation_policy:
    enabled: true
    frequency_days: 90

  api_keys:
    storage: environment_variables
    encryption: true

# === AUDIT & COMPLIANCE ===
audit:
  enabled: true
  log_level: info
  destinations:
    - file: /logs/audit.log
    - syslog: localhost:514

  events_to_log:
    - authentication_attempts
    - api_key_usage
    - model_access
    - admin_actions
    - configuration_changes

  retention_days: 90

# === MODEL SAFETY ===
model_safety:
  uncensored_models:
    warning_banner: true
    logging_required: true
    rate_limiting:
      enabled: true
      max_requests_per_user_per_hour: 100

  content_filtering:
    enabled: false  # Disabled for uncensored operation
    log_filtered_requests: true

  abuse_detection:
    enabled: true
    alert_threshold: 10  # Suspicious requests per hour

# === MONITORING & ALERTS ===
security_monitoring:
  metrics:
    - failed_auth_attempts
    - api_rate_limit_hits
    - container_restarts
    - resource_exhaustion
    - network_anomalies

  alerting:
    channels:
      - email: admin@example.com
      - webhook: https://discord.com/api/webhooks/...

    thresholds:
      failed_auth_attempts: 5
      api_rate_limit_hits: 100
      container_restarts: 3
      cpu_usage_percent: 90
      memory_usage_percent: 85

# === BACKUP & RECOVERY ===
backup:
  enabled: true
  frequency: daily
  retention_days: 30

  targets:
    - postgresql_database
    - redis_data
    - model_cache
    - configuration_files

  encryption:
    enabled: true
    key_management: local  # or aws_kms for production