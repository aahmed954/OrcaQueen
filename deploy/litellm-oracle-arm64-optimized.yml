# LiteLLM Gateway - ARM64 Oracle Cloud Optimized Configuration
# Oracle Cloud Free Tier: 4 ARM64 cores (Ampere A1), 24GB RAM
# Optimized for performance, memory efficiency, and Oracle Cloud networking

version: '3.8'

services:
  # PostgreSQL - ARM64 optimized configuration
  postgres:
    image: postgres:15-alpine  # Alpine for minimal memory footprint
    platform: linux/arm64/v8   # Explicit ARM64 v8 architecture
    container_name: litellm-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: litellm
      POSTGRES_USER: litellm
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
      # PostgreSQL ARM64 optimizations
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
      # Memory tuning for 24GB total system RAM (allocate ~2GB for PostgreSQL)
      POSTGRES_MAX_CONNECTIONS: 100
      POSTGRES_SHARED_BUFFERS: 512MB
      POSTGRES_EFFECTIVE_CACHE_SIZE: 1536MB
      POSTGRES_MAINTENANCE_WORK_MEM: 128MB
      POSTGRES_WORK_MEM: 4MB
      POSTGRES_MAX_WAL_SIZE: 1GB
      POSTGRES_MIN_WAL_SIZE: 80MB
      POSTGRES_CHECKPOINT_COMPLETION_TARGET: 0.9
      POSTGRES_WAL_BUFFERS: 16MB
      POSTGRES_DEFAULT_STATISTICS_TARGET: 100
      POSTGRES_RANDOM_PAGE_COST: 1.1
      POSTGRES_EFFECTIVE_IO_CONCURRENCY: 200
      POSTGRES_MAX_PARALLEL_WORKERS_PER_GATHER: 2
      POSTGRES_MAX_PARALLEL_WORKERS: 4
      POSTGRES_MAX_PARALLEL_MAINTENANCE_WORKERS: 2
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/postgresql-arm64.conf:/etc/postgresql/postgresql.conf:ro
    networks:
      - litellm_network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U litellm"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

  # Redis - ARM64 optimized configuration
  redis:
    image: redis:7-alpine
    platform: linux/arm64/v8
    container_name: litellm-redis
    restart: unless-stopped
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD:-changeme}
      --appendonly yes
      --appendfsync everysec
      --maxmemory 4gb
      --maxmemory-policy allkeys-lru
      --maxmemory-samples 5
      --tcp-backlog 511
      --tcp-keepalive 300
      --timeout 0
      --databases 16
      --save 900 1
      --save 300 10
      --save 60 10000
      --rdbcompression yes
      --rdbchecksum yes
      --lazyfree-lazy-eviction yes
      --lazyfree-lazy-expire yes
      --lazyfree-lazy-server-del yes
      --replica-lazy-flush yes
      --io-threads 2
      --io-threads-do-reads yes
      --jemalloc-bg-thread yes
    volumes:
      - redis_data:/data
    networks:
      - litellm_network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 4G
        reservations:
          cpus: '0.5'
          memory: 2G
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD:-changeme}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    sysctls:
      - net.core.somaxconn=1024
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

  # LiteLLM Gateway - ARM64 optimized
  litellm:
    image: ghcr.io/berriai/litellm:main-latest
    platform: linux/arm64/v8
    container_name: litellm-gateway
    restart: unless-stopped
    ports:
      - "${LITELLM_PORT:-4000}:4000"
    environment:
      # Core Configuration
      LITELLM_MASTER_KEY: ${LITELLM_MASTER_KEY}
      DATABASE_URL: postgresql://litellm:${POSTGRES_PASSWORD:-changeme}@postgres:5432/litellm
      REDIS_URL: redis://:${REDIS_PASSWORD:-changeme}@redis:6379

      # ARM64 Performance Optimizations
      LITELLM_WORKERS: 4  # Match ARM64 core count
      LITELLM_THREADS_PER_WORKER: 2  # Optimize for ARM64 threading
      LITELLM_WORKER_CLASS: uvicorn.workers.UvicornWorker
      LITELLM_WORKER_CONNECTIONS: 1000
      LITELLM_MAX_REQUESTS: 1000
      LITELLM_MAX_REQUESTS_JITTER: 50
      LITELLM_TIMEOUT: 120
      LITELLM_GRACEFUL_TIMEOUT: 30
      LITELLM_KEEPALIVE: 5

      # Memory Management
      LITELLM_MEMORY_LIMIT: 8192  # 8GB limit
      LITELLM_MAX_BUFFER_SIZE: 65536
      LITELLM_BACKLOG: 2048

      # Cache Configuration
      LITELLM_CACHE: true
      LITELLM_CACHE_TYPE: redis
      LITELLM_CACHE_PARAMS: |
        {
          "host": "redis",
          "port": 6379,
          "password": "${REDIS_PASSWORD:-changeme}",
          "db": 0,
          "decode_responses": false,
          "socket_keepalive": true,
          "socket_keepalive_options": {
            "TCP_KEEPIDLE": 120,
            "TCP_KEEPINTVL": 30,
            "TCP_KEEPCNT": 3
          },
          "connection_pool_kwargs": {
            "max_connections": 50,
            "health_check_interval": 30
          }
        }
      LITELLM_CACHE_TTL: 3600
      LITELLM_CACHE_PREFIX: litellm_

      # Request Processing
      LITELLM_REQUEST_TIMEOUT: 600
      LITELLM_STREAM_TIMEOUT: 600
      LITELLM_MAX_RETRIES: 3
      LITELLM_RETRY_AFTER: 5
      LITELLM_FALLBACK_ON_ERRORS: true

      # Logging and Monitoring
      LITELLM_LOG_LEVEL: INFO
      LITELLM_DEBUG: false
      LITELLM_TELEMETRY: false
      LITELLM_DISABLE_SPEND_LOGS: false
      LITELLM_JSON_LOGS: true
      LITELLM_LOG_TO_FILE: true
      LITELLM_LOG_FILE_PATH: /app/logs/litellm.log

      # Security
      LITELLM_ENABLE_CORS: true
      LITELLM_CORS_ALLOW_ORIGINS: "*"
      LITELLM_CORS_ALLOW_CREDENTIALS: true
      LITELLM_ENABLE_JWT_AUTH: ${ENABLE_JWT_AUTH:-false}

      # Oracle Cloud Networking
      LITELLM_HOST: 0.0.0.0
      LITELLM_PORT: 4000
      LITELLM_PROXY_BASE_URL: ${PROXY_BASE_URL:-http://localhost:4000}

      # Python Optimizations for ARM64
      PYTHONUNBUFFERED: 1
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONHASHSEED: random
      PYTHONOPTIMIZE: 1
      PYTHON_MALLOC: pymalloc
      PYTHONMAXINTCACHE: 2048

      # ARM64-specific optimizations
      OMP_NUM_THREADS: 4
      MKL_NUM_THREADS: 4
      NUMEXPR_NUM_THREADS: 4
      VECLIB_MAXIMUM_THREADS: 4

    volumes:
      - ./config/litellm-config.yaml:/app/config.yaml:ro
      - litellm_logs:/app/logs
      - litellm_cache:/app/.cache
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - litellm_network
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 8G
        reservations:
          cpus: '1.0'
          memory: 4G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
      nproc:
        soft: 32768
        hard: 32768
    sysctls:
      - net.core.somaxconn=1024
      - net.ipv4.tcp_syncookies=1
      - net.ipv4.tcp_tw_reuse=1
      - net.ipv4.tcp_fin_timeout=30

  # HAProxy - Load Balancer for high availability
  haproxy:
    image: haproxy:2.9-alpine
    platform: linux/arm64/v8
    container_name: litellm-haproxy
    restart: unless-stopped
    ports:
      - "${HAPROXY_PORT:-8080}:8080"
      - "${HAPROXY_STATS_PORT:-8404}:8404"
    volumes:
      - ./config/haproxy-arm64.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    networks:
      - litellm_network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "haproxy", "-c", "-f", "/usr/local/etc/haproxy/haproxy.cfg"]
      interval: 30s
      timeout: 10s
      retries: 3
    sysctls:
      - net.ipv4.ip_local_port_range=1024 65535
      - net.ipv4.tcp_tw_reuse=1
      - net.core.somaxconn=1024

  # Prometheus - Metrics collection (optional, lightweight)
  prometheus:
    image: prom/prometheus:latest
    platform: linux/arm64/v8
    container_name: litellm-prometheus
    restart: unless-stopped
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./config/prometheus-arm64.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'
      - '--storage.tsdb.retention.size=2GB'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - litellm_network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 512M
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${POSTGRES_DATA_PATH:-./data/postgres}
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${REDIS_DATA_PATH:-./data/redis}
  litellm_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${LITELLM_LOGS_PATH:-./logs/litellm}
  litellm_cache:
    driver: local
  prometheus_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PROMETHEUS_DATA_PATH:-./data/prometheus}

networks:
  litellm_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.25.0.0/16
    driver_opts:
      com.docker.network.bridge.name: litellm_br
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.bridge.host_binding_ipv4: "0.0.0.0"
      com.docker.network.driver.mtu: "1500"