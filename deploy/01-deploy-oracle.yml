# Oracle ARM Node - Orchestration Services
# Deploy to: 100.96.197.84
version: '3.8'

services:
  # PostgreSQL - Persistent storage for LiteLLM
  postgres:
    image: postgres:15-alpine
    container_name: oracle-postgres
    restart: always
    environment:
      POSTGRES_DB: litellm
      POSTGRES_USER: litellm
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-securepass123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - aiswarm
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U litellm"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis - Caching layer
  redis:
    image: redis:7-alpine
    container_name: oracle-redis
    restart: always
    command: >
      redis-server
      --appendonly yes
      --maxmemory 2gb
      --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - aiswarm
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # LiteLLM - API Gateway and Model Router
  litellm:
    image: ghcr.io/berriai/litellm:main-latest
    container_name: oracle-litellm
    restart: always
    ports:
      - "4000:4000"
    environment:
      - LITELLM_MASTER_KEY=${LITELLM_MASTER_KEY:-sk-1234}
      - DATABASE_URL=postgresql://litellm:${POSTGRES_PASSWORD:-securepass123}@postgres:5432/litellm
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - STORE_MODEL_IN_DB=true
      - LITELLM_MODE=PRODUCTION
      - CUSTOM_API_BASE=http://100.72.73.3:8000/v1  # Starlord vLLM
    volumes:
      - ./config/litellm.yaml:/app/config.yaml:ro
      - litellm_logs:/app/logs
    networks:
      - aiswarm
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Open WebUI - Primary Interface
  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: oracle-open-webui
    restart: always
    ports:
      - "3000:8080"
    environment:
      - WEBUI_NAME=AI Swarm Control Center
      - WEBUI_URL=http://100.96.197.84:3000
      - OPENAI_API_BASE_URL=http://litellm:4000/v1
      - OPENAI_API_KEY=${LITELLM_MASTER_KEY:-sk-1234}
      - ENABLE_COMMUNITY_SHARING=false
      - ENABLE_ADMIN_EXPORT=true
      - DEFAULT_MODELS=llama-3.2-dark-champion,dolphin-3-llama-3.1-70b,deepseek-v3
    volumes:
      - open_webui_data:/app/backend/data
    networks:
      - aiswarm
    depends_on:
      litellm:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Pipelines - Advanced routing and filtering
  pipelines:
    image: ghcr.io/open-webui/pipelines:main
    container_name: oracle-pipelines
    restart: always
    ports:
      - "9099:9099"
    environment:
      - PIPELINES_PORT=9099
      - PIPELINES_OPENAI_API_BASE_URL=http://litellm:4000/v1
      - PIPELINES_OPENAI_API_KEY=${LITELLM_MASTER_KEY:-sk-1234}
    volumes:
      - ./pipelines:/app/pipelines:ro
      - pipelines_data:/app/data
    networks:
      - aiswarm
    depends_on:
      - litellm
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9099/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Health Monitor
  health-monitor:
    image: prom/node-exporter:latest
    container_name: oracle-health-monitor
    restart: always
    ports:
      - "9100:9100"
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - aiswarm

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  litellm_logs:
    driver: local
  open_webui_data:
    driver: local
  pipelines_data:
    driver: local

networks:
  aiswarm:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24