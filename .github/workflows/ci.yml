name: CI/CD for AI-SWARM-MIAMI-2025

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install pytest paramiko hvac onnxruntime transformers flask

      - name: Run Python tests
        run: |
          pytest main.py -v

      - name: Lint Python
        run: |
          pip install flake8
          flake8 main.py scripts/

      - name: Test bash scripts
        run: |
          shellcheck deploy.sh scripts/key_rotation.py

  build-multi-arch:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push multi-arch images
        run: |
          # Example for custom images (litellm, etc.)
          docker buildx create --use
          docker buildx build --platform linux/amd64,linux/arm64 -t ai-swarm-litellm:latest ./build/litellm --push
          docker buildx build --platform linux/amd64,linux/arm64 -t ai-swarm-model-manager:latest . --file Dockerfile.model-manager --push
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  deploy-preview:
    runs-on: ubuntu-latest
    needs: build-multi-arch
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Deploy to staging
        run: |
          # SSH to Oracle for staging deploy (simplified)
          echo "Staging deployment triggered"
          # In prod, use ansible or similar
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ORACLE_IP: ${{ secrets.ORACLE_IP }}